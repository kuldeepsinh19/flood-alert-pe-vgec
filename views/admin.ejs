<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Form Submissions</title>
  <!-- Add Font Awesome CDN -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha384-+4uFs0bxwXVsGcbFzSJZFcI3R/6R/IO1Fyq+5ZtBy7X6k7wdu0s6qr/GnJsW2KDI" crossorigin="anonymous">

  <!-- Firebase -->
  <script src="https://www.gstatic.com/firebasejs/9.1.0/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.1.0/firebase-database.js"></script>

  <!-- Your existing CSS styles -->

  <style>
    /* General Styles */
body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f2f2f2;
  color: #333;
  overflow-x: hidden; /* Hide horizontal scrollbar */
}

.navbar {
  position: fixed;
  top: 0;
  width: 100%;
  background-color: #3498db;
  padding: 10px;
  color: #fff;
  text-align: center;
  z-index: 1000;
}

.navbar ul {
  list-style-type: none;
  padding: 0;
  margin: 10px;
}

.navbar ul li {
  display: inline;
  margin-right: 20px;
}

.navbar ul li a {
  color: #fff;
  text-decoration: none;
  font-weight: bold;
}

.title-container {
  background-color: #0f1010;
  text-align: center;
  padding: 5px 0;
  margin-top: 60px; /* Space between navbar and title */
}

h1 {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  color: #fff;
}

.container {
  max-width: 100%;
  margin: 20px auto;
  padding: 20px;
  box-sizing: border-box;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
}

.submission-box {
  background-color: #f8f9fa;
  border: 1px solid #ced4da;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  position: relative; /* Ensure child elements position correctly */
}

.submission-box:hover {
  transform: scale(1.05);
}

.submission-number {
  position: absolute;
  top: -15px;
  left: 50%;
  transform: translateX(-50%);
  background-color: #3498db;
  color: #fff;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  font-size: 18px;
  z-index: 1;
}

.submission-details {
  padding: 20px;
  flex: 1;
}

.submission-details p {
  margin: 5px 0;
  font-size: 16px;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.key {
  font-weight: bold;
  color: #3498db;
}

.value {
  color: #555;
}
    /* Existing CSS styles */
    .status-button {
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .status-button i {
      margin-right: 5px;
    }

    .pending {
      background-color: rgb(214, 214, 3);
      color: black;
    }

    .on-process {
      background-color: rgb(4, 149, 4);
      color: white;
    }

    .resolved {
      background-color: rgb(191, 6, 6);
      color: white;
    }
  </style>

</head>
<body>
  <div class="navbar">
    <ul>
      <li><a href="#" id="adminLink">ADMIN</a></li>
    </ul>
  </div>
  <div class="title-container">
    <h1>Form Submissions</h1>
  </div>
  <div class="container">
    <% if (formData) { %> <% Object.keys(formData).forEach((key, index) => { %>
    <div class="submission-box">
      <div class="submission-number"><%= index + 1 %></div>
      <div class="submission-details">
        <p><span class="key">Name:</span> <span class="value"><%= formData[key].name %></span></p>
        <p><span class="key">Email:</span> <span class="value"><%= formData[key].email %></span></p>
        <p><span class="key">Phone:</span> <span class="value"><%= formData[key].phone %></span></p>
        <p><span class="key">Message:</span> <span class="value"><%= formData[key].message %></span></p>
        <p><span class="key">Subject:</span> <span class="value"><%= formData[key].subject %></span></p>
        
        <!-- Buttons for status -->
        <div class="status-buttons">
          <button class="status-button pending" onclick="changeStatus(this)"><i class="fas fa-hourglass-half"></i> Pending</button>
          <button class="status-button resolved" onclick="resolveForm(this, '<%= key %>')"><i class="fas fa-check-circle"></i> Resolved</button>
        </div>
      </div>
    </div>
    <% }); %> <% } else { %>
    <p>No form submissions available.</p>
    <% } %>
  </div>

  <script>
    // Initialize Firebase
    const firebaseConfig = {
  apiKey: "AIzaSyA6_Fls-zrOp1JTSvEFPNkVUf7iOeg7TXU",
  authDomain: "waterlevel-c2a1b.firebaseapp.com",
  projectId: "waterlevel-c2a1b",
  storageBucket: "waterlevel-c2a1b.appspot.com",
  messagingSenderId: "940376979833",
  appId: "1:940376979833:web:4622066a99cbfe86ee97a8",
  measurementId: "G-NL86V4999M",
};
    firebase.initializeApp(firebaseConfig);

    // Function to change status
    function changeStatus(button) {
      const statusButtons = button.parentNode.querySelectorAll('.status-button');
      statusButtons.forEach(btn => btn.classList.remove('active'));
      button.classList.add('active');
      button.innerHTML = '<i class="fas fa-play-circle"></i> On Process';
      button.classList.remove("pending");
      button.classList.add("on-process");
      button.style.backgroundColor = "green";
      button.setAttribute("onclick", "removeOnProcess(this)");
    }

    // Function to remove on process status
    function removeOnProcess(button) {
      button.innerHTML = '<i class="fas fa-hourglass-half"></i> Pending';
      button.classList.remove("on-process");
      button.classList.add("pending");
      button.style.backgroundColor = "yellow";
      button.setAttribute("onclick", "changeStatus(this)");
    }

    // Function to resolve form and remove from UI
function resolveForm(button) {
  const submissionBox = button.closest('.submission-box');
  submissionBox.remove(); // Remove the form from UI
}

  </script>

  <!-- Google Tag Manager -->
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-MZ8ZF7B3');</script>
  <!-- End Google Tag Manager -->
</body>
</html>
